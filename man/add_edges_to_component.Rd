% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/identifiability.R
\name{add_edges_to_component}
\alias{add_edges_to_component}
\title{Add Edges to a Connected Component in a Graph}
\usage{
add_edges_to_component(graph, cc, connected, src)
}
\arguments{
\item{graph}{A binary adjacency matrix (p x p) representing the graph, where \code{graph[i, j] = 1}
indicates an edge from node \code{i} to node \code{j}.}

\item{cc}{A binary matrix (p x p) representing the connected component being constructed.
Initially contains 0s and is updated to 1s where connections are found.}

\item{connected}{An integer vector of length \code{p} where \code{-1} indicates unvisited nodes and
\code{1} indicates visited nodes.}

\item{src}{An integer index indicating the source node to begin traversal from.}
}
\value{
A list with two elements:
\describe{
\item{cc}{The updated component matrix with added edges.}
\item{connected}{The updated vector of visited nodes.}
}
}
\description{
Traverses a graph starting from a source node and marks all reachable nodes as part of
the same connected component, updating the component matrix and visited node tracking.
}
\examples{
graph <- matrix(c(
  0, 1, 0,
  1, 0, 1,
  0, 1, 0
), 3, 3, byrow = TRUE)
cc <- matrix(0, 3, 3)
connected <- rep(-1, 3)
GSFM:::add_edges_to_component(graph, cc, connected, 1)
}
